[{"/Users/seungyoungoh/workspace/mind-detector-front/client/src/index.tsx":"1","/Users/seungyoungoh/workspace/mind-detector-front/client/src/reportWebVitals.ts":"2","/Users/seungyoungoh/workspace/mind-detector-front/client/src/App.tsx":"3","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/index.ts":"4","/Users/seungyoungoh/workspace/mind-detector-front/client/src/pages/MainPage.tsx":"5","/Users/seungyoungoh/workspace/mind-detector-front/client/src/styles/theme.ts":"6","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/index.tsx":"7","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/TopBlock.tsx":"8","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/BottomBlock.tsx":"9","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/PrivacyBox.tsx":"10","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/common/CustomButton.tsx":"11","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/common/TitleBox.tsx":"12","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/index.ts":"13","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/reducer.ts":"14","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/actions.ts":"15","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/types.ts":"16","/Users/seungyoungoh/workspace/mind-detector-front/client/src/pages/TestPage.tsx":"17","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/TestForm/TestFormContainer.tsx":"18","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/SideBlock/index.tsx":"19","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/SideBlock/Manual.tsx":"20","/Users/seungyoungoh/workspace/mind-detector-front/client/src/constants/selection.ts":"21","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/actions.ts":"22","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/index.ts":"23","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/types.ts":"24","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/reducer.ts":"25","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/sagas.ts":"26","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/api.ts":"27","/Users/seungyoungoh/workspace/mind-detector-front/client/src/constants/questions.ts":"28","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/TestForm/index.tsx":"29","/Users/seungyoungoh/workspace/mind-detector-front/client/src/pages/ResultPage.tsx":"30","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/ResultForm/index.tsx":"31","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/ResultForm/Gage.tsx":"32","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/ResultForm/HospitalBox.tsx":"33","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/TestForm/TestFormPresentation.tsx":"34"},{"size":933,"mtime":1608141011992,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1608033079663,"results":"37","hashOfConfig":"36"},{"size":686,"mtime":1608366310261,"results":"38","hashOfConfig":"36"},{"size":371,"mtime":1608366310267,"results":"39","hashOfConfig":"36"},{"size":290,"mtime":1608330857884,"results":"40","hashOfConfig":"36"},{"size":143,"mtime":1608330857885,"results":"41","hashOfConfig":"36"},{"size":406,"mtime":1608142373112,"results":"42","hashOfConfig":"36"},{"size":4009,"mtime":1608479794230,"results":"43","hashOfConfig":"36"},{"size":925,"mtime":1608142373110,"results":"44","hashOfConfig":"36"},{"size":4398,"mtime":1608474090486,"results":"45","hashOfConfig":"36"},{"size":894,"mtime":1608330857874,"results":"46","hashOfConfig":"36"},{"size":552,"mtime":1608330857875,"results":"47","hashOfConfig":"36"},{"size":89,"mtime":1608156248393,"results":"48","hashOfConfig":"36"},{"size":1252,"mtime":1608477884281,"results":"49","hashOfConfig":"36"},{"size":511,"mtime":1608332362577,"results":"50","hashOfConfig":"36"},{"size":829,"mtime":1608330857883,"results":"51","hashOfConfig":"36"},{"size":389,"mtime":1608366310273,"results":"52","hashOfConfig":"36"},{"size":2776,"mtime":1608483898229,"results":"53","hashOfConfig":"36"},{"size":1360,"mtime":1608485933132,"results":"54","hashOfConfig":"36"},{"size":944,"mtime":1608330857876,"results":"55","hashOfConfig":"36"},{"size":5323,"mtime":1608330857879,"results":"56","hashOfConfig":"36"},{"size":1146,"mtime":1608468309741,"results":"57","hashOfConfig":"36"},{"size":114,"mtime":1608330857880,"results":"58","hashOfConfig":"36"},{"size":500,"mtime":1608366310273,"results":"59","hashOfConfig":"36"},{"size":1175,"mtime":1608466136301,"results":"60","hashOfConfig":"36"},{"size":571,"mtime":1608484853831,"results":"61","hashOfConfig":"36"},{"size":793,"mtime":1608484987548,"results":"62","hashOfConfig":"36"},{"size":1590,"mtime":1608330857878,"results":"63","hashOfConfig":"36"},{"size":87,"mtime":1608366310264,"results":"64","hashOfConfig":"36"},{"size":510,"mtime":1608366310271,"results":"65","hashOfConfig":"36"},{"size":4930,"mtime":1608520957341,"results":"66","hashOfConfig":"36"},{"size":1032,"mtime":1608466028417,"results":"67","hashOfConfig":"36"},{"size":2057,"mtime":1608485734598,"results":"68","hashOfConfig":"36"},{"size":2886,"mtime":1608366310265,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"11mwfnv",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/seungyoungoh/workspace/mind-detector-front/client/src/index.tsx",[],[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/reportWebVitals.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/App.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/index.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/pages/MainPage.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/styles/theme.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/index.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/TopBlock.tsx",["147","148"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport TitleBox from '../common/TitleBox';\nimport CustomButton from '../common/CustomButton';\nimport PrivacyBox from './PrivacyBox';\nimport { initializeForm, savePrivacy } from '../../modules/test';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../modules';\n\nconst TopWrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 50vh;\n  max-height: 300px;\n  display: flex;\n`;\n\nconst ContentWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LeftConetent = styled.em`\n  width: auto;\n  padding-right: 70px;\n  flex: 0 1 auto;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 29px;\n  color: #333333;\n  letter-spacing: -0.5px;\n`;\n\nconst Description = styled.p`\n  width: auto;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 29px;\n  letter-spacing: -0.5px;\n  color: #444444;\n`;\n\nconst TitleArea = styled.div`\n  display: flex;\n  flex: 0 0 235px;\n  padding-left: 10vw;\n`;\n\nconst ContentArea = styled.div`\n  display: flex;\n  margin-left: auto;\n  padding-right: 10vw;\n`;\n\nconst RightContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 440px;\n`;\n\nconst MainButton = styled(CustomButton)`\n  width: 105px;\n  margin-top: 22px;\n  p + & {\n    margin-top: 50px;\n  }\n`;\n\nfunction TopBlock() {\n  const history = useHistory();\n  const [startToggle, setStartToggle] = useState(false);\n  const dispatch = useDispatch();\n  const [privacy, setPrivacy] = useState({\n    age: '선택',\n    sex: '선택',\n    job: '선택',\n    province: '선택',\n    city: '선택',\n  });\n\n  const handleForm = (\n    e:\n      | React.ChangeEvent<HTMLSelectElement>\n      | React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const key = e.target.name;\n    let value = '';\n    if (e.target.name === 'age') {\n      value = e.target.value.replace('대', '');\n    } else {\n      value = e.target.value;\n    }\n    setPrivacy({\n      ...privacy,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm());\n  }, [dispatch]);\n\n  return (\n    <TopWrapper>\n      <TitleArea>\n        <TitleBox />\n      </TitleArea>\n      <ContentWrapper>\n        {startToggle ? (\n          <>\n            <PrivacyBox handleForm={handleForm} />\n            <MainButton\n              onClick={() => {\n                // console.log(Object.values(privacy));\n                if (Object.values(privacy).includes('선택')) {\n                  alert('분석을 위해 개인정보 기입을 부탁드립니다.');\n                } else {\n                  dispatch(savePrivacy(privacy));\n                  history.push('/test');\n                }\n              }}\n            >\n              다음\n            </MainButton>\n          </>\n        ) : (\n          <>\n            <ContentArea>\n              <LeftConetent>\n                우리 마음에도\n                <br />\n                방역이 필요하다는 사실,\n                <br />\n                알고 계셨나요?\n              </LeftConetent>\n              <RightContent>\n                <Description>\n                  마인드 디텍터는 여러분의 진실된 답변을 토대로 <br />\n                  마음을 읽어주는 웹어플리케이션입니다. <br />\n                  텍스트 데이터와 공공 데이터를 활용해 우울감의 정도를 측정하고,{' '}\n                  <br />\n                  그에 맞춘 마음 방역을 제안합니다.\n                </Description>\n                <MainButton\n                  hoverShadow={true}\n                  onClick={() => {\n                    setStartToggle(true);\n                  }}\n                >\n                  시작하기\n                </MainButton>\n              </RightContent>\n            </ContentArea>\n          </>\n        )}\n      </ContentWrapper>\n    </TopWrapper>\n  );\n}\n\nexport default TopBlock;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/BottomBlock.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/Main/PrivacyBox.tsx",["149","150","151","152","153"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as selectionConstant from '../../constants/selection';\n\nconst PrivacyArea = styled.div`\n  width: 562px;\n  height: 255px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: white;\n  color: #444444;\n  font-weight: 600;\n  box-shadow: 0px 4px 14px rgba(0, 0, 0, 0.1);\n  border-radius: 16px;\n`;\n\nconst PrivacyItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 15% 0 15%;\n  > label {\n    font-size: 16px;\n    width: 80px;\n  }\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nconst InputArea = styled.form`\n  display: flex;\n  flex: 1;\n  label {\n    cursor: pointer;\n  }\n  select {\n    font-family: inherit;\n    width: 80%;\n    padding: 8px;\n    font-size: 15px;\n    background: #ffffff;\n    border: 1px solid ${(props) => props.theme.gray};\n    box-sizing: border-box;\n  }\n  input[type='radio']:checked {\n    cursor: pointer;\n    background-color: ${(props) => props.theme.main};\n    border: solid 1px rgba(255, 255, 255, 0.3);\n  }\n  input[type='radio'] {\n    appearance: none;\n    border-radius: 100%;\n    margin-right: 10px;\n    width: 12px;\n    height: 12px;\n    background: white;\n    box-shadow: inset 0px 4px 3px rgba(0, 0, 0, 0.17);\n  }\n  input + label {\n    margin-right: auto;\n  }\n`;\n\ntype provinceType = selectionConstant.provinceType;\nconst ages = selectionConstant.ages;\nconst jobs = selectionConstant.jobs;\nconst provinces = selectionConstant.provinces;\n\ninterface PrivacyProps {\n  handleForm: (\n    e:\n      | React.ChangeEvent<HTMLSelectElement>\n      | React.ChangeEvent<HTMLInputElement>\n  ) => void;\n}\n\nfunction PrivacyBox({ handleForm }: PrivacyProps) {\n  const [selectedProvince, setSelectedProvince] = useState<keyof provinceType>(\n    '서울특별시'\n  );\n  const ageList = ages.map((age: string, index) => {\n    return <option value={age}>{age}</option>;\n  });\n  const jobList = jobs.map((job: string, index) => {\n    return <option value={job}>{job}</option>;\n  });\n  const provinceList = Object.keys(provinces).map((province, index) => {\n    return <option value={province}>{province}</option>;\n  });\n  const cityList = provinces[selectedProvince].map((city, index) => {\n    return <option value={city}>{city}</option>;\n  });\n\n  const handleProvince = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const province: any = e.target.value;\n    if (province === '선택') {\n      alert('시/구 를 선택해주세요.');\n    } else {\n      setSelectedProvince(province);\n      handleForm(e);\n    }\n  };\n\n  return (\n    <PrivacyArea>\n      <div className=\"content-area\">\n        <PrivacyItem>\n          <label>나이</label>\n          <InputArea className=\"input-area\">\n            <select name=\"age\" onChange={handleForm}>\n              <option value=\"선택\">선택</option>\n              {ageList}\n            </select>\n          </InputArea>\n        </PrivacyItem>\n        <PrivacyItem>\n          <label>성별</label>\n          <InputArea>\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"male\"\n              id=\"male\"\n              onChange={handleForm}\n            />\n            <label htmlFor=\"male\">남자</label>\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"female\"\n              id=\"female\"\n              onChange={handleForm}\n            />\n            <label htmlFor=\"female\">여자</label>\n          </InputArea>\n        </PrivacyItem>\n        <PrivacyItem>\n          <label>직업</label>\n          <InputArea className=\"input-area\">\n            <select name=\"job\" onChange={handleForm}>\n              <option value=\"선택\">선택</option>\n              {jobList}\n            </select>\n          </InputArea>\n        </PrivacyItem>\n        <PrivacyItem>\n          <label>주거지</label>\n          <InputArea className=\"input-area\">\n            <select name=\"province\" onChange={handleProvince}>\n              <option value=\"선택\">선택</option>\n              {provinceList}\n            </select>\n          </InputArea>\n          <InputArea className=\"input-area\">\n            <select name=\"city\" onChange={handleForm}>\n              <option value=\"선택\">선택</option>\n              {cityList}\n            </select>\n          </InputArea>\n        </PrivacyItem>\n      </div>\n    </PrivacyArea>\n  );\n}\n\nexport default PrivacyBox;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/common/CustomButton.tsx",["154","155"],"import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst StyledButton = styled.button`\n  width: autod;\n  background: transparent;\n  padding: 10px 19px;\n  text-align: center;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 15px;\n  letter-spacing: 3px;\n  line-height: 15px;\n  background-color: white;\n  border: none;\n  border-radius: 76px;\n  color: ${(props) => props.theme.main};\n  ${(props: any) =>\n    props.hoverShadow\n      ? css`\n          &:hover {\n            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n            transition: box-shadow;\n            transition-duration: 0.4s;\n          }\n        `\n      : css`\n          box-shadow: 0px 4px 14px rgba(0, 0, 0, 0.1);\n        `}\n  cursor: pointer;\n`;\n\nfunction CustomButton({ hoverShadow, ...rest }: any) {\n  return <StyledButton hoverShadow={hoverShadow} {...rest} />;\n}\n\nexport default CustomButton;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/common/TitleBox.tsx",["156","157"],"import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst TitleWrapper = styled.div`\n  font-weight: 600;\n  font-size: 78px;\n  line-height: 92.5px;\n  letter-spacing: -1.5px;\n  ${(props: any) =>\n    props.isSmall &&\n    css`\n      font-size: 38px;\n      line-height: 47px;\n    `}\n\n  color: ${(props) => props.theme.main};\n`;\n\nfunction TitleBox({ isSmall, ...rest }: any) {\n  return (\n    <TitleWrapper isSmall={isSmall} {...rest}>\n      마인드\n      <br />\n      디텍터\n    </TitleWrapper>\n  );\n}\n\nexport default TitleBox;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/index.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/reducer.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/actions.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/test/types.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/pages/TestPage.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/TestForm/TestFormContainer.tsx",["158","159","160","161","162"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TestFormPresentation from './TestFormPresentation';\nimport { saveAnswer } from '../../modules/test/actions';\nimport { questions } from '../../constants/questions';\nimport { RootState } from '../../modules';\nimport { postTest, PostTestState } from '../../modules/post-test';\nimport { useHistory } from 'react-router-dom';\n\nfunction TestFormContainer() {\n  const { loading, success, error }: PostTestState['postStatus'] = useSelector(\n    (state: RootState) => state.postTest.postStatus\n  );\n  const testForm = useSelector((state: RootState) => state.test);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(1);\n  const [answer, setAnswer] = useState('');\n  const regExp = /[\\{\\}\\[\\]\\/?;:|\\)*~`!^\\-+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n\n  const initializePage = () => {\n    setAnswer('');\n  };\n\n  const handleText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const answer = e.target.value;\n    if (regExp.test(answer)) {\n      alert('답변에 \".\" 와 \",\" 를 제외한 특수 문자를 포함하지 말아주세요.');\n    } else if (answer.length > 80) {\n      alert('80자 이내로 작성해주세요.');\n    } else {\n      setAnswer(answer);\n    }\n  };\n\n  const handlePrevious = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (page == 1) {\n      alert('이전 페이지가 없습니다.');\n    } else {\n      setPage(page - 1);\n    }\n  };\n\n  const handleNext = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (answer.length < 5) {\n      alert('답변을 5자 이상으로 작성해주세요.');\n    } else {\n      const pageKey = 'answer' + String(page);\n      const testData = { pageKey: pageKey, answer: answer };\n      console.log(testData);\n      dispatch(saveAnswer(testData));\n      setPage(page + 1);\n    }\n  };\n\n  const handleTest = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (answer.length < 5) {\n      alert('답변을 5자 이상으로 작성해주세요.');\n    } else {\n      const pageKey = 'answer' + String(page);\n      const testData = { pageKey: pageKey, answer: answer };\n      dispatch(saveAnswer(testData));\n      history.push('./test'); // Rerendering\n      const data = dispatch(postTest(testForm));\n      if (success) {\n        console.log(data);\n        history.push('./result');\n      }\n    }\n  };\n\n  return (\n    <TestFormPresentation\n      page={page}\n      question={questions[page - 1]}\n      answer={answer}\n      initializePage={initializePage}\n      handleText={handleText}\n      handlePrevious={handlePrevious}\n      handleNext={handleNext}\n      handleTest={handleTest}\n    />\n  );\n}\n\nexport default TestFormContainer;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/SideBlock/index.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/SideBlock/Manual.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/constants/selection.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/actions.ts",["163","164"],"import * as types from './types';\nimport { AxiosError } from 'axios';\n\nexport const POST_TEST = 'post-test/POST_TEST' as const;\nexport const POST_TEST_SUCCESS = 'post-test/POST_TEST_SUCCESS' as const;\nexport const POST_TEST_ERROR = 'post-test/POST_TEST_ERROR' as const;\nexport const FETCH_LEVEL = 'post-test/FETCH_LEVEL' as const;\nexport const FETCH_CENTERS = 'post-test/FETCH_CENTERS' as const;\n\nexport const postTest = (TestForm: types.TestForm) => {\n  console.log('서버 요청 중..');\n  return {\n    type: POST_TEST,\n    payload: TestForm,\n  };\n};\n\nexport const postTestSuccess = () => {\n  console.log('post 완료!');\n  return {\n    type: POST_TEST_SUCCESS,\n  };\n};\n\nexport const postTestError = (error: AxiosError) => {\n  console.log('post 실패');\n  return {\n    type: POST_TEST_ERROR,\n    error: error,\n  };\n};\n\nexport const fetchLevel = (level: any) => {\n  console.log('level fetch 완료!');\n  return {\n    type: FETCH_LEVEL,\n    payload: level,\n  };\n};\n\nexport const fetchCenters = (centers: any) => {\n  console.log('centers fetch 완료!');\n  console.log(centers);\n  return {\n    type: FETCH_CENTERS,\n    payload: centers,\n  };\n};\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/index.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/types.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/reducer.ts",["165","166"],"import * as actions from './actions';\nimport * as types from './types';\n\nconst initialState: any = {\n  postStatus: {\n    loading: false,\n    success: false,\n    error: null,\n  },\n  level: 0,\n  centers: [],\n};\n\nconst postTest = (state: any = initialState, action: types.PostTestAction) => {\n  switch (action.type) {\n    case actions.POST_TEST:\n      return {\n        ...state,\n        postStatus: {\n          ...state.postStatus,\n          loading: true,\n        },\n      };\n    case actions.POST_TEST_SUCCESS:\n      return {\n        ...state,\n        postStatus: {\n          ...state.postStatus,\n          loading: false,\n          success: true,\n        },\n      };\n    case actions.POST_TEST_ERROR:\n      return {\n        ...state,\n        postStatus: {\n          ...state.postStatus,\n          loading: false,\n          error: action.error,\n        },\n      };\n    case actions.FETCH_LEVEL:\n      console.log(action.payload);\n      return {\n        ...state,\n        level: action.payload,\n      };\n    case actions.FETCH_CENTERS:\n      return {\n        ...state,\n        centers: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postTest;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/sagas.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/modules/post-test/api.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/constants/questions.ts",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/TestForm/index.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/pages/ResultPage.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/ResultForm/index.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/ResultForm/Gage.tsx",[],"/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/ResultForm/HospitalBox.tsx",["167","168","169","170"],"import React from 'react';\nimport styled from 'styled-components';\nimport CustomButton from '../common/CustomButton';\n\nconst HospitalArea = styled.div`\n  margin-top: 68px;\n  width: 935px;\n  height: 568px;\n  background: #ffffff;\n  box-shadow: 0px 4px 14px rgba(0, 0, 0, 0.1);\n  border-radius: 16px;\n`;\n\nconst VisitButton = styled(CustomButton)`\n  height: 35px;\n  color: white;\n  background-color: ${(props) => props.theme.main};\n`;\n\nconst HospitalList = styled.ul`\n  /* display: flex; */\n  padding: 62px 60px 0px 73px;\n`;\n\nconst HospitalInfo = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HospitalTextArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  line-height: 31px;\n  letter-spacing: -0.5px;\n\n  > em {\n    margin: 0px 5px;\n    font-weight: 500;\n    font-size: 18px;\n  }\n  > span {\n    font-size: 15px;\n    margin: 14px 0px;\n  }\n`;\n\nconst Border = styled.div`\n  margin-top: 15px;\n  margin-bottom: 30px;\n  border: 1px solid #cacaca;\n`;\n\nconst Fence = styled.span`\n  width: 0px;\n  height: 10.5px;\n  border: 1px solid #333333;\n  order: 1;\n  flex-grow: 0;\n  margin: 0 14px 0 14px;\n`;\n\nfunction HospitalBox({ hospitalMock }: any) {\n  const hospitalInfos = hospitalMock.map((hospitalObj: any, index: any) => {\n    console.log(hospitalObj);\n    return (\n      <>\n        <HospitalInfo>\n          <HospitalTextArea>\n            <em>{hospitalObj.name}</em>\n            <span>\n              <a>{hospitalObj.address}</a>\n              <Fence /> <a>{hospitalObj.phonecall}</a>\n            </span>\n          </HospitalTextArea>\n          <VisitButton\n            onClick={() => {\n              console.log(hospitalObj.address);\n              window.location.href = `https://map.naver.com/v5/search/${hospitalObj.address}`;\n            }}\n          >\n            방문하기\n          </VisitButton>\n        </HospitalInfo>\n        <Border />\n      </>\n    );\n  });\n\n  return (\n    <HospitalArea>\n      <HospitalList>{hospitalInfos}</HospitalList>\n    </HospitalArea>\n  );\n}\n\nexport default HospitalBox;\n","/Users/seungyoungoh/workspace/mind-detector-front/client/src/components/TestForm/TestFormPresentation.tsx",[],{"ruleId":"171","severity":1,"message":"172","line":8,"column":23,"nodeType":"173","messageId":"174","endLine":8,"endColumn":34},{"ruleId":"171","severity":1,"message":"175","line":9,"column":10,"nodeType":"173","messageId":"174","endLine":9,"endColumn":19},{"ruleId":"171","severity":1,"message":"176","line":82,"column":42,"nodeType":"173","messageId":"174","endLine":82,"endColumn":47},{"ruleId":"171","severity":1,"message":"176","line":85,"column":42,"nodeType":"173","messageId":"174","endLine":85,"endColumn":47},{"ruleId":"171","severity":1,"message":"176","line":88,"column":62,"nodeType":"173","messageId":"174","endLine":88,"endColumn":67},{"ruleId":"171","severity":1,"message":"176","line":91,"column":59,"nodeType":"173","messageId":"174","endLine":91,"endColumn":64},{"ruleId":"177","severity":1,"message":"178","line":96,"column":21,"nodeType":"179","messageId":"180","endLine":96,"endColumn":24,"suggestions":"181"},{"ruleId":"177","severity":1,"message":"178","line":18,"column":13,"nodeType":"179","messageId":"180","endLine":18,"endColumn":16,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"178","line":33,"column":49,"nodeType":"179","messageId":"180","endLine":33,"endColumn":52,"suggestions":"183"},{"ruleId":"177","severity":1,"message":"178","line":9,"column":13,"nodeType":"179","messageId":"180","endLine":9,"endColumn":16,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"178","line":19,"column":41,"nodeType":"179","messageId":"180","endLine":19,"endColumn":44,"suggestions":"185"},{"ruleId":"171","severity":1,"message":"186","line":11,"column":11,"nodeType":"173","messageId":"174","endLine":11,"endColumn":18},{"ruleId":"171","severity":1,"message":"187","line":11,"column":29,"nodeType":"173","messageId":"174","endLine":11,"endColumn":34},{"ruleId":"171","severity":1,"message":"188","line":39,"column":5,"nodeType":"173","messageId":"174","endLine":39,"endColumn":55},{"ruleId":"171","severity":1,"message":"188","line":48,"column":23,"nodeType":"173","messageId":"174","endLine":48,"endColumn":73},{"ruleId":"171","severity":1,"message":"188","line":60,"column":23,"nodeType":"173","messageId":"174","endLine":60,"endColumn":73},{"ruleId":"177","severity":1,"message":"178","line":33,"column":35,"nodeType":"179","messageId":"180","endLine":33,"endColumn":38,"suggestions":"189"},{"ruleId":"177","severity":1,"message":"178","line":41,"column":39,"nodeType":"179","messageId":"180","endLine":41,"endColumn":42,"suggestions":"190"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":21,"nodeType":"179","messageId":"180","endLine":4,"endColumn":24,"suggestions":"191"},{"ruleId":"177","severity":1,"message":"178","line":14,"column":26,"nodeType":"179","messageId":"180","endLine":14,"endColumn":29,"suggestions":"192"},{"ruleId":"177","severity":1,"message":"178","line":63,"column":40,"nodeType":"179","messageId":"180","endLine":63,"endColumn":43,"suggestions":"193"},{"ruleId":"177","severity":1,"message":"178","line":64,"column":56,"nodeType":"179","messageId":"180","endLine":64,"endColumn":59,"suggestions":"194"},{"ruleId":"171","severity":1,"message":"176","line":64,"column":61,"nodeType":"173","messageId":"174","endLine":64,"endColumn":71},{"ruleId":"177","severity":1,"message":"178","line":64,"column":68,"nodeType":"179","messageId":"180","endLine":64,"endColumn":71,"suggestions":"195"},"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'RootState' is defined but never used.","'index' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["196","197"],["198","199"],["200","201"],["202","203"],["204","205"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'e' is defined but never used.",["206","207"],["208","209"],["210","211"],["212","213"],["214","215"],["216","217"],["218","219"],{"messageId":"220","fix":"221","desc":"222"},{"messageId":"223","fix":"224","desc":"225"},{"messageId":"220","fix":"226","desc":"222"},{"messageId":"223","fix":"227","desc":"225"},{"messageId":"220","fix":"228","desc":"222"},{"messageId":"223","fix":"229","desc":"225"},{"messageId":"220","fix":"230","desc":"222"},{"messageId":"223","fix":"231","desc":"225"},{"messageId":"220","fix":"232","desc":"222"},{"messageId":"223","fix":"233","desc":"225"},{"messageId":"220","fix":"234","desc":"222"},{"messageId":"223","fix":"235","desc":"225"},{"messageId":"220","fix":"236","desc":"222"},{"messageId":"223","fix":"237","desc":"225"},{"messageId":"220","fix":"238","desc":"222"},{"messageId":"223","fix":"239","desc":"225"},{"messageId":"220","fix":"240","desc":"222"},{"messageId":"223","fix":"241","desc":"225"},{"messageId":"220","fix":"242","desc":"222"},{"messageId":"223","fix":"243","desc":"225"},{"messageId":"220","fix":"244","desc":"222"},{"messageId":"223","fix":"245","desc":"225"},{"messageId":"220","fix":"246","desc":"222"},{"messageId":"223","fix":"247","desc":"225"},"suggestUnknown",{"range":"248","text":"249"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"248","text":"250"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"251","text":"249"},{"range":"251","text":"250"},{"range":"252","text":"249"},{"range":"252","text":"250"},{"range":"253","text":"249"},{"range":"253","text":"250"},{"range":"254","text":"249"},{"range":"254","text":"250"},{"range":"255","text":"249"},{"range":"255","text":"250"},{"range":"256","text":"249"},{"range":"256","text":"250"},{"range":"257","text":"249"},{"range":"257","text":"250"},{"range":"258","text":"249"},{"range":"258","text":"250"},{"range":"259","text":"249"},{"range":"259","text":"250"},{"range":"260","text":"249"},{"range":"260","text":"250"},{"range":"261","text":"249"},{"range":"261","text":"250"},[2363,2366],"unknown","never",[425,428],[792,795],[210,213],[389,392],[839,842],[984,987],[93,96],[235,238],[1186,1189],[1248,1251],[1260,1263]]